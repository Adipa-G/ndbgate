name: ndbgate
run-name: Build and Test
on: [push]
jobs:
  build-and-test-solution:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3
      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'
      - name: Install dependencies
        run: dotnet restore ./ndbgate/Dbgate/DbGate.csproj
      - name: Build 
        run: dotnet build
      - name: Test 
        run: dotnet test
      - run: echo "üçè This job's status is ${{ job.status }}."
  publish-to-nuget:
    runs-on: ubuntu-latest
    needs: build-and-test-solution
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3
      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'
        env:
          NUGET_AUTH_TOKEN: ${{secrets.NUGET_TOKEN}}
      - name: Install dependencies
        run: dotnet restore
      - name: Build Release Config
        run: dotnet build --configuration Release ndbgate/Dbgate/DbGate.csproj
      - name: Create the package
        run: dotnet build --configuration Release ndbgate/Dbgate/DbGate.csproj
      - name: Publish the package to GPR
        run: dotnet nuget push Dbgate/bin/Release/*.nupkg
      - run: echo "üçè This job's status is ${{ job.status }}."