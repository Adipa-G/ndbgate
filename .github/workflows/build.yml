name: ndbgate
run-name: Build and Test
on: [push]
jobs:
  build-and-test-solution:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3
      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'
      - name: Install dependencies
        run: dotnet restore
      - name: Build 
        run: dotnet build
      - name: Test 
        run: dotnet test --logger trx --results-directory "TestResults"
      - name: Test Report
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: test-results
          path: "**/*.trx"                            
          reporter: dotnet-trx
          fail-on-error: true
        
      - run: echo "üçè This job's status is ${{ job.status }}."
  publish-to-nuget:
    runs-on: ubuntu-latest
    needs: build-and-test-solution
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3
      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'
        env:
          NUGET_AUTH_TOKEN: ${{secrets.NUGET_TOKEN}}
      - name: Install dependencies
        run: dotnet restore
      - name: Build Release Config
        run: dotnet build --configuration Release
      - name: Create the package
        run: dotnet pack --configuration Release
      - name: Publish the package to Nuget
        run: |
          cd DbGate/bin/Release
          dotnet nuget push *.nupkg -k ${{ secrets.NUGET_TOKEN }} --skip-duplicate -s https://api.nuget.org/v3/index.json
      - run: echo "üçè This job's status is ${{ job.status }}."